class MyQueue {
public:
    stack<int> s1;
    stack<int> s2;
    MyQueue() {
    }
    
    void push(int x) {
        while(!s1.empty()){ //if there is an element in first stack
            s2.push(s1.top()); //put it in second stack
            s1.pop(); //pop the element from first stack
        }

        s1.push(x); //if both stacks are empty

        while(!s2.empty()){ //if there is an element in second stack
            s1.push(s2.top()); //put it in first stack
            s2.pop(); //pop the element from second stack
        }
    }
    
    int pop() {
        int remove = s1.top();
        s1.pop();
        return remove;
    }
    
    int peek() {
        return s1.top();
    }
    
    bool empty() {
        return s1.empty();
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */
